# Generated by Django 2.0.2 on 2018-04-13 18:23

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('summary', models.TextField(help_text='Enter a brief description of the book', max_length=1000)),
                ('for_class', models.CharField(default='Not for a class.', help_text='Enter which class this textbook is for.', max_length=200, verbose_name='Class')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='BookSwap.Author')),
            ],
        ),
        migrations.CreateModel(
            name='BookInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this particular book across whole library', primary_key=True, serialize=False)),
                ('instance_pic', models.ImageField(default='bookinstance_imgs/default_instance.jpg', upload_to='bookinstance_imgs/')),
                ('book_condition', models.CharField(blank=True, choices=[('5', 'Like-New'), ('4', 'Good'), ('3', 'Average'), ('2', 'Bad'), ('1', 'Barely Readable')], default='5', help_text='Book condition', max_length=1)),
                ('comment', models.CharField(default='', help_text='Additional comments about your book (e.g. pricing, books you want to swap it for, etc).', max_length=500)),
                ('book', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='BookSwap.Book')),
            ],
            options={
                'ordering': ['book_condition'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, choices=[('Fiction', 'Fiction'), ('Non-Fiction', 'Non-Fiction'), ('Textbook', 'Textbook'), ('History', 'History'), ('Mystery', 'Mystery'), ('Sci-Fi', 'Sci-Fi')], default='Fiction', help_text='Select a book genre (e.g. Science Fiction, French Poetry etc.)', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this particular user', primary_key=True, serialize=False)),
                ('first_name', models.CharField(help_text='Enter your first name.', max_length=200)),
                ('last_name', models.CharField(help_text='Enter your last name.', max_length=200)),
                ('university', models.CharField(blank=True, choices=[('University of Massachusetts Amherst', 'University of Massachusetts Amherst'), ('Hampshire College', 'Hampshire College'), ('Smith College', 'Smith College'), ('Mount Holyoke College', 'Mount Holyoke College'), ('Amherst College', 'Amherst College'), ('Other', 'Other'), ('None', 'None')], default='None', help_text='School or University', max_length=200)),
                ('bio', models.CharField(help_text='Enter a short bio.', max_length=200)),
                ('books_offered', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='BookSwap.BookInstance')),
                ('books_wanted', models.ManyToManyField(to='BookSwap.Book')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.AddField(
            model_name='bookinstance',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='BookSwap.Profile'),
        ),
        migrations.AddField(
            model_name='book',
            name='genre',
            field=models.ManyToManyField(help_text='Select a genre for this book', to='BookSwap.Genre'),
        ),
        migrations.AlterUniqueTogether(
            name='author',
            unique_together={('first_name', 'last_name')},
        ),
        migrations.AlterUniqueTogether(
            name='book',
            unique_together={('title', 'author')},
        ),
    ]
